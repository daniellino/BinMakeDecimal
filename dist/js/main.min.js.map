{"version":3,"sources":["main.js"],"names":["cloneBinArr","popNumArr","resetWholeGeneration","window","location","reload","Array","from","binNumArr","decimVal","document","getElementById","noLeadBinary","clickedObjectContainer","givenAns","corAnsArray","floor","Math","random","chosenAnsWithPlus","populateAnsComb","deimalVlaue","innerHTML","length","k","agregate","concat","takeNum","textContent","parseInt","push","addUpresult","makeItHidden","style","display","testForHidingRow","tablRowCount","querySelector","rows","Indx","shuffleArray","i","j","temp","newArray","q","indexStr","t","timerNum","setInterval","printSec","clearInterval","runToCheck","resultAns","myFunctionCorrect","backgroundColor","body","color","m","findTheCorrectAns","p","undefined","myFunctionFalse"],"mappings":"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","file":"main.min.js","sourcesContent":["const resetWholeGeneration = () => {\r\n    window.location.reload();\r\n}\r\nconst binNumArr = [128, 64, 32, 16, 8, 4, 2, 1];\r\nconst cloneBinArr = Array.from(binNumArr);\r\nconst popNumArr = [];\r\nlet decimVal = 0;\r\nlet noLeadBinary;\r\nlet clickedObjectContainer;\r\nlet givenAns = document.getElementById('combAns');\r\nlet addUpresult = 0;\r\nlet corAnsArray = [];\r\nlet chosenAnsWithPlus = '';\r\n/****************************************************************** */\r\ndecimVal = Math.floor(Math.random() * 256);\r\nlet deimalVlaue = document.getElementById(\"decimal-Value\");\r\ndeimalVlaue.innerHTML = decimVal;\r\n/********************************************************************************** */\r\nfunction populateAnsComb() {\r\n    let agregate = '';\r\n    for (let k = 0; k < popNumArr.length; k++) {\r\n        if (agregate == '') {\r\n            agregate = agregate.concat(popNumArr[k]);\r\n            givenAns.innerHTML = agregate;\r\n        } else {\r\n            agregate = agregate.concat('+', popNumArr[k]);\r\n            givenAns.innerHTML = agregate;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction givenAnsAddUp() {\r\n    let takeNum = clickedObjectContainer.textContent;\r\n    takeNum = parseInt(takeNum);\r\n    popNumArr.push(takeNum);\r\n    console.log(popNumArr);\r\n    // console.log(takeNum);\r\n    addUpresult = addUpresult + takeNum;\r\n    console.log(addUpresult);\r\n    populateAnsComb();\r\n\r\n} //~~~~~~~~~End of Function givenAnsAddUp\r\n/******************************************************************************************************************************************** */\r\n\r\n//~~~~~~~~~~~~~~~~~asked question loop~~~~~~~~~~~~~~~~\r\n/*//////////FUNCTIONS/////////*/\r\nfunction makeItHidden() {\r\n    //function for hidding the clicked cell table row\r\n    clickedObjectContainer.style.display = 'none';\r\n} //hiding\r\n\r\nfunction testForHidingRow() {\r\n    let tablRowCount = document.querySelector('.answersTable').rows.length;\r\n    // console.log(tablRowCount);\r\n    for (var Indx = 1; Indx < tablRowCount + 1; Indx++) {\r\n        if (\r\n            document.querySelector(\r\n                '.answersTable tr:nth-child(' + Indx + ') td:nth-child(2)>a'\r\n            ).style.display == 'none' &&\r\n            document.querySelector(\r\n                '.answersTable tr:nth-child(' + Indx + ') td:nth-child(3)>a'\r\n            ).style.display == 'none'\r\n        ) {\r\n            document.querySelector(\r\n                '.answersTable tr:nth-child(' + Indx + ')'\r\n            ).style.display = 'none';\r\n        } //end of if\r\n    } //end of loop\r\n} //end of function hiding rows\r\n\r\n// console.log(cloneBinArr);\r\n\r\nfunction shuffleArray(binNumArr) {\r\n    for (var i = binNumArr.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = binNumArr[i];\r\n        binNumArr[i] = binNumArr[j];\r\n        binNumArr[j] = temp;\r\n    }\r\n    return binNumArr;\r\n}\r\nvar newArray = shuffleArray(binNumArr);\r\n// console.log(cloneBinArr);\r\nfor (let q = 0; q < newArray.length; q++) {\r\n    var indexStr = String(q + 1);\r\n    // console.log(newArray.length);\r\n    indexStr = 'print_arr' + indexStr;\r\n    // console.log(indexStr);\r\n    document.getElementById(indexStr).innerHTML = newArray[q];\r\n\r\n}\r\n\r\n/*******************timer*********************** */\r\nlet t = 0\r\nlet timerNum = setInterval(printSec, 1000);\r\n// console.log(timerNum);\r\nfunction printSec() {\r\n    if (t < 30) {\r\n        t++;\r\n        document.getElementById('timer-value').innerHTML = t;\r\n    } else {\r\n        clearInterval(timerNum);\r\n        // console.log(`done!!`);\r\n        document.getElementById('timer-value').innerHTML = 'Time is up!';\r\n        document.querySelector(\".timer-wraper\").style.display = \"none\";\r\n        document.getElementById(\"timeUp\").style.display = \"block\";\r\n    }\r\n}\r\n/*******************timer*********************** */\r\n/*********************************************End of random shuffling of the options**************/\r\n\r\nfunction runToCheck() {\r\n    // let hidTable = document.querySelector('.answersTable').style.display = 'none';\r\n    //~~~~~~~~~~~~~~~~function definition for correct\r\n    let resultAns = document.getElementById('matchField');\r\n    function myFunctionCorrect() {\r\n        resultAns.innerHTML = 'Correct!';\r\n        document.body.style.backgroundColor = '#96E29A'; //color feedback correct\r\n        givenAns.style.color = '#22E02D';\r\n    } //end of function myFunctionCorrect\r\n    //~~~~~~~~~~~~~~~~function definition for False\r\n    function myFunctionFalse() {\r\n        //injecting a class for changing the color of the FALSE text to red\r\n        resultAns.innerHTML = 'False!';\r\n        document.body.style.backgroundColor = '#FF5760'; //color feedback correct\r\n        resultAns.style.color = '#FF0000';\r\n        function findTheCorrectAns() {\r\n            for (let m = 0; m < 8; m++) {\r\n\r\n                if ((decimVal - cloneBinArr[m]) < 0) {\r\n                    // console.log(`iterration ${m} ,decimal is smaller than : ${cloneBinArr[m]}`);\r\n                    continue;\r\n                } else if (decimVal == cloneBinArr[m]) {\r\n                    // console.log(`${cloneBinArr[m]} is the answer`);\r\n                }\r\n                decimVal = decimVal - cloneBinArr[m];\r\n                corAnsArray.push(cloneBinArr[m]);\r\n                // console.log(`on iterration ${m},subtracted value is: ${decimVal} and the number is: ${cloneBinArr[m]}`);\r\n            }\r\n            console.log(corAnsArray);\r\n        }\r\n        findTheCorrectAns();\r\n        if (addUpresult == '') {\r\n            givenAns.innerHTML = `Correct answer is: ${corAnsArray}, and you didn't choose an option`\r\n        } else {\r\n            for (let p = 0; p < popNumArr.length; p++) {\r\n                if (p == 0) {\r\n                    // console.log('inside!!!!!!');\r\n                    chosenAnsWithPlus = chosenAnsWithPlus.concat(popNumArr[p]);\r\n                    // console.log(typeof (chosenAnsWithPlus));\r\n                } else {\r\n                    chosenAnsWithPlus = chosenAnsWithPlus.concat('+', popNumArr[p]);\r\n                }\r\n            }\r\n            console.log(chosenAnsWithPlus);\r\n            givenAns.innerHTML = `Correct answer is: ${corAnsArray}. You Chose ${chosenAnsWithPlus} which yields: ${addUpresult}!`;\r\n        }\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~Main condition~~~~~~~~~~~~~////////////////////////////////\r\n    let cmbAnsFieldContent = givenAns.innerText;\r\n    if (clickedObjectContainer != undefined) {\r\n        if (decimVal == addUpresult) {\r\n            myFunctionCorrect();\r\n        } else {\r\n            myFunctionFalse();\r\n        }\r\n\r\n    } else {\r\n        myFunctionFalse();\r\n    }\r\n} //end of function runToCheck\r\n\r\n/*▐▐▐▐▐▐▐▐▐Assigning shuffled new array elements to HTML cells in the table▐▐▐▐▐▐▐▐▐▐▐*/\r\n"]}